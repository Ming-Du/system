syntax = "proto2";
package planning;

enum PlanningMode {
  LOCAL = 0;
  GLOBAL = 1;
}

message PlanningConfig {
    optional uint32 frequency = 1;
    optional double speed_max = 2;
    optional double acc_min = 3;
    optional double acc_max = 4;
    optional double jerk_min = 5;
    optional double jerk_max = 6;
    optional double time_sample = 7;
    optional double path_sample = 8;
    optional double safe_distance_buffer = 9;
    optional double safe_distance_by_time = 10;
    //int map_builder_mode = 0;
    optional double safe_lateral_buffer = 11;
    optional double car_follow_factor = 12;
    optional bool  flag_lane_change = 13;
    optional double dis_stop = 14;
    optional bool  flag_global_lane_change = 15;
    optional bool  flag_horn_enable = 16;
    // spdplan para
    optional double vc_kp = 43;
    optional double vc_ki = 44;
    optional double dc_d_kp = 45;
    optional double dc_d_ki = 46;
    optional double dc_v_kp = 47;
    optional double dc_v_ki = 48;
    optional double dc_d_input_low = 49;
    optional double dc_d_input_high = 50;
    optional double dc_v_input_low = 51;
    optional double dc_v_input_high = 52;
    optional double dc_d_out_low = 53;
    optional double dc_d_out_high = 54;
    optional double dc_v_out_low = 55;
    optional double dc_v_out_high = 56;
    optional double dc_ttc = 57;
    optional double dc_min_dis = 58;
    optional double dc_safe_dis = 59;
    optional double dc_ctrl_opt = 60;
    optional double dc_flg_use_safe = 61;
    optional double afcn_work = 62;
    optional double afcn_low = 63;
    optional int32 sw_use_stitch = 64;
    optional int32 sw_stop_design = 65;
    optional double utm_x = 66;
    optional double utm_y = 67;
    optional double pre_coef = 68;
    optional int32 trj_num = 69;
    optional double filter_coef = 70;
    optional double vc_input_low = 71;
    optional double vc_input_high = 72;
    optional double vc_out_low = 73;
    optional double vc_out_high = 74;

}
