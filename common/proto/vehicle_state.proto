syntax = "proto2";
package chassis;

import "header.proto";
import "chassis.proto";

message RoboTaxiState {
    optional bool veh_rta_recover = 1 [default = false]; // 车辆可进入自动驾驶标志位，不可进入时一定时间内恢复可自动进入
    optional bool veh_rta_no_recover = 2 [default = false];  // 车辆可进入自动驾驶标志位，不可进入时恢复无法自动进入
}

message RoboBusState {
    optional bool reserved = 1; // 预留
}

message AirConditionerState {
    optional bool is_on = 1; //是否开启
    optional uint32 mode = 2; //模式, 1: 自动模式, 2: 制冷模式, 3: 通风模式（仅送风，无温度）
    optional uint32 temperature = 3; //温度
    optional uint32 wind_speed = 4; //风速, 1-3: 1-3档
}

message HeaterState {
    optional bool is_on = 1; //是否开启
    optional uint32 wind_speed = 2; //风速, 1-2: 1-2档
}

message DoorState {
    optional bool is_on = 1; //是否开启
}

message LightState {
    optional bool is_on = 1; //是否开启
    optional uint32 color = 2; //颜色
}

message RoboBusJinlvM1State {
    optional AirConditionerState air_conditioner_state = 1; //空调
    optional HeaterState heater_state = 2; //暖风机
    optional DoorState front_door_state = 3; //车门
    optional LightState main_lamp1_state = 4; //顶灯1
    optional LightState main_lamp2_state = 5; //顶灯2
    optional LightState small_lamp_state = 6; //小灯(氛围灯)
}

message VehicleState {
    optional common.Header header = 1;
    optional chassis.PilotMode pilot_mode = 2 [default = MODE_MANUAL];
    optional float steering = 3 [default = 0]; // steering angle in degrees
    optional float speed = 4 [default = 0];    // speed in m/s
    optional float accel = 5 [default = 0];    // target acceleration in m/s^2
    optional float throttle = 6 [default = 0]; // target throttle in percentage [0, 100]
    optional float brake = 7 [default = 0];    // target brake in percentage [0, 100]

    optional chassis.GearPosition gear = 8 [default = GEAR_NONE];
    optional chassis.LightSwitch light = 9 [default = LIGHT_NONE];

    //TODO: move to chassis
    optional bool horn = 10 [default = false];         //鸣笛
    optional bool highbeam = 11 [default = false];     //远光灯
    optional bool lowbeam = 12 [default = false];      //近光灯
    optional bool foglight = 13 [default = false];     //雾灯
    optional bool clearance_lamps = 14 [default = false];  //示廓灯
    optional bool warn_light = 15 [default = false];   //报警灯
    optional bool parking_brake = 16 [default = false];

    optional chassis.LongitudeDrivingMode longitude_driving_mode = 20;
    optional chassis.EPSSteeringMode eps_steering_mode = 21;
    optional uint32 steering_sign = 22;

    optional bool steer_inference = 23 [default = false]; //方向盘干预
    optional bool brake_inference = 24 [default = false]; //制动踏板干预
    optional bool accel_inference = 25 [default = false]; //加速踏板干预
    optional bool gear_switch_inference = 26 [default = false]; //档位切换干预 
    optional bool location_missing = 27 [default = false]; //未收到定位
    optional bool trajectory_missing = 28 [default = false]; //未收到轨迹
    optional bool chassis_status_missing = 29 [default = false]; //未收到车辆底盘反馈信息
    optional bool brake_light_status = 30 [default = false]; //自驾模式下制动灯状态
    optional bool pilot_mode_condition_met = 31 [default = false];
    
    optional float steeringSpd = 32 [default = 0]; // steering angle speed in degrees/s

    optional float leftFrontWheelAngle = 33 [default = 0];//左前轮角度（deg）,左负右正
    optional float rightFrontWheelAngle = 34 [default = 0]; //右前轮角度（deg）,左负右正

    optional chassis.EPBWorkStatus epb = 35 [default = EPBSTATUS_NONE]; // EPB工作状态
    optional chassis.VehicleTakeOverStatus vehicletakeoverstatus = 36 [default = None_TakeOver]; // 车辆人工接管状态
    optional bool Emergency_Stop_Switch = 37 [default = false]; // 急停开关状态
    optional chassis.VehicleFaultLevel vehiclefaultlevel = 38 [default = None_Fault]; // 整车故障状态

    optional float bms_soc = 40 [default = 0];  // 电量百分比范围   0~100
    optional float fuel_value = 41 [default = 0]; // 油车剩余油量

    optional RoboTaxiState robo_taxi_state = 201; // taxi状态
    optional RoboBusState robo_bus_state = 202; // bus状态
    optional RoboBusJinlvM1State robo_bus_jinlv_m1_state = 203; //金旅定制车m1状态
}
